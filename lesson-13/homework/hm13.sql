--HOMEWROK 13
--EASY TASKS
--Task 1
SELECT 
CONCAT (EMPLOYEE_ID, '-', FIRST_NAME, ' ', LAST_NAME) FULLNAME
FROM Employees
WHERE EMPLOYEE_ID = 100
--Task 2
UPDATE Employees
SET PHONE_NUMBER = REPLACE(PHONE_NUMBER, '124', '999');
--Task 3
SELECT FIRST_NAME, LEN(FIRST_NAME) AS LENGHT
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'A%' 
   OR FIRST_NAME LIKE 'J%'
   OR FIRST_NAME LIKE 'M%'
ORDER BY FIRST_NAME 
--Task 4
SELECT MANAGER_ID, SUM(SALARY) AS TOTAL_SALARY
FROM EMPLOYEES
GROUP BY MANAGER_ID

--Task 5
SELECT Year1,
       GREATEST(Max1,Max2, Max3) AS HighestValue
FROM TestMax
--Task 6
SELECT *
FROM Cinema
WHERE id % 2 = 1 
AND  description <> 'boring'

--Task 7
SELECT * 
FROM SingleOrder
ORDER BY 
CASE WHEN Id = 0 THEN 1 ELSE 0 END
--Task 8
SELECT  COALESCE(ssn, passportid, itin) AS FirstNonNull
FROM Person;

--MEDIUM TASKS
--Task 1
SELECT LEFT(FULLNAME, CHARINDEX(' ', FULLNAME)-1) FIRSTNAME,
       SUBSTRING (FULLNAME, CHARINDEX(' ',FULLNAME)+1, CHARINDEX(' ', FULLNAME)) MIDDLENAME,
	   RIGHT(FULLNAME, LEN(FULLNAME) - CHARINDEX(' ', FULLNAME, CHARINDEX(' ', FULLNAME)+1)) LASTNAME
FROM STUDENTS

--Task 2
SELECT * FROM ORDERS 
WHERE DELIVERYSTATE IN (
SELECT CUSTOMERID FROM ORDERS WHERE DELIVERYSTATE = 'CA'
)
AND DELIVERYSTATE =' TX'
--Task 3
SELECT STRING_AGG(String, ' ') 
       WITHIN GROUP (ORDER BY SEQUENCENUMBER) AS FULLQUERY
FROM DMLTable;
--Task 4
--Task 5
SELECT DEPARTMENT_ID,
       COUNT(*) AS TotalEmployees,
       100.0 * SUM(CASE WHEN DATEDIFF(YEAR, HIRE_DATE, GETDATE()) > 3 THEN 1 ELSE 0 END) / COUNT(*) AS PercentOver3Years
FROM Employees
GROUP BY DEPARTMENT_ID;
--DIFFICULT TASKS
--Task 1 
--Task 2
SELECT DISTINCT s1.StudentName, s1.BIRTHDAY
FROM Student s1
JOIN Student s2 
  ON s1.BIRTHDAY = s2.BIRTHDAY AND s1.StudentName <> s2.StudentName
ORDER BY s1.BIRTHDAY

--Task 3
SELECT 
  CASE WHEN PlayerA < PlayerB THEN PlayerA ELSE PlayerB END AS Player1,
  CASE WHEN PlayerA < PlayerB THEN PlayerB ELSE PlayerA END AS Player2,
  SUM(Score) AS TotalScore
FROM PlayerScores
GROUP BY 
  CASE WHEN PlayerA < PlayerB THEN PlayerA ELSE PlayerB END,
  CASE WHEN PlayerA < PlayerB THEN PlayerB ELSE PlayerA END;

--Task 4
